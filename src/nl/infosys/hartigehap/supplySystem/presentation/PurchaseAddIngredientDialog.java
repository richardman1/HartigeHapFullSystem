/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.infosys.hartigehap.supplySystem.presentation;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import nl.infosys.hartigehap.supplySystem.businesslogic.IngredientManager;
import nl.infosys.hartigehap.supplySystem.businesslogic.PurchaseManager;
import nl.infosys.hartigehap.supplySystem.domain.Interface_IngredientReadOnly;
import nl.infosys.hartigehap.supplySystem.presentation.PurchaseOverviewPanel.PresentationType;

/**
 *
 * @author Gregor
 */
public class PurchaseAddIngredientDialog extends javax.swing.JDialog
{
    private IngredientManager ingredientManager;
    private CustomTableDataModel drinkTableModel, foodTableModel;
    private CustomPurchaseCellRenderer tableRenderer;
    private PurchaseManager purchaseManager;
    private int orderId;
    private PresentationType type;

    /**
     * Creates new form PurchaseSelectItemGUI
     *
     * @param editDialog
     * @param purchaseManager
     * @param orderId
     * @param type
     * @param ingredientManager
     */
    public PurchaseAddIngredientDialog(PurchaseCreateDialog editDialog, IngredientManager ingredientManager, PurchaseManager purchaseManager, int orderId, PresentationType type)
    {
        super(editDialog, true);
        this.purchaseManager = purchaseManager;
        this.orderId = orderId;
        this.ingredientManager = ingredientManager;
        this.type = type;

        String[] ColumnNames = new String[]
        {
            "Naam", "Voorraad"
        };

        drinkTableModel = new CustomTableDataModel(ColumnNames);
        foodTableModel = new CustomTableDataModel(ColumnNames);
        tableRenderer = new CustomPurchaseCellRenderer();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();

        initComponents();
        fillTables();
        this.setLocation((dim.width / 2) - (this.getSize().width / 2), (dim.height / 2) - (this.getSize().height / 2));

        if (type == PresentationType.QUOTATIONS)
        {
            lable_purchasePrice.setVisible(false);
            textfield_purchasePrice.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        button_itemToevoegen = new javax.swing.JButton();
        button_terug = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        label_hoeveelheid = new javax.swing.JLabel();
        textfield_purchasePrice = new javax.swing.JTextField();
        lable_purchasePrice = new javax.swing.JLabel();
        textfield_amount = new javax.swing.JTextField();
        button_addItem = new javax.swing.JButton();
        button_goBack = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_foodIngredients = new nl.infosys.hartigehap.supplySystem.presentation.CustomJTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_drinkIngredients = new nl.infosys.hartigehap.supplySystem.presentation.CustomJTable();

        button_itemToevoegen.setText("Item toevoegen");

        button_terug.setText("terug");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dranken");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingredienten");

        label_hoeveelheid.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        label_hoeveelheid.setText("Hoeveelheid");
        label_hoeveelheid.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        textfield_purchasePrice.setText("0,00");
        textfield_purchasePrice.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                textfield_purchasePriceMouseClicked(evt);
            }
        });
        textfield_purchasePrice.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textfield_purchasePriceKeyPressed(evt);
            }
        });

        lable_purchasePrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lable_purchasePrice.setText("Prijs per stuk:");

        textfield_amount.setText("0");
        textfield_amount.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                textfield_amountMouseClicked(evt);
            }
        });
        textfield_amount.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                textfield_amountKeyPressed(evt);
            }
        });

        button_addItem.setText("Voeg toe");
        button_addItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_addItemActionPerformed(evt);
            }
        });

        button_goBack.setText("Terug");
        button_goBack.requestFocus();
        button_goBack.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_goBackActionPerformed(evt);
            }
        });

        table_foodIngredients.setModel(foodTableModel);
        table_foodIngredients.setDefaultRenderer(Object.class, tableRenderer);
        table_foodIngredients.setRowSorter(null);
        table_foodIngredients.getColumnModel().getColumn(0).setPreferredWidth(1000);
        table_foodIngredients.getColumnModel().getColumn(1).setPreferredWidth(300);
        jScrollPane3.setViewportView(table_foodIngredients);

        table_drinkIngredients.setModel(drinkTableModel);
        table_drinkIngredients.setDefaultRenderer(Object.class, tableRenderer);
        table_drinkIngredients.setRowSorter(null);
        table_drinkIngredients.getColumnModel().getColumn(0).setPreferredWidth(1000);
        table_drinkIngredients.getColumnModel().getColumn(1).setPreferredWidth(300);
        jScrollPane4.setViewportView(table_drinkIngredients);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label_hoeveelheid, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfield_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lable_purchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfield_purchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 95, 95))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(button_goBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button_addItem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 154, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label_hoeveelheid)
                    .addComponent(lable_purchasePrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textfield_purchasePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textfield_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_addItem)
                    .addComponent(button_goBack))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_goBackActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_goBackActionPerformed
    {//GEN-HEADEREND:event_button_goBackActionPerformed
        this.dispose();
    }//GEN-LAST:event_button_goBackActionPerformed

    private void button_addItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_addItemActionPerformed
    {//GEN-HEADEREND:event_button_addItemActionPerformed
        JTable tempTable;
        double price;
        int amount;

        //Check for selected product
        if (table_drinkIngredients.getSelectedRow() > -1)
        {
            tempTable = table_drinkIngredients;
        }
        else if (table_foodIngredients.getSelectedRow() > -1)
        {
            tempTable = table_foodIngredients;
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Geen product geselecteerd.");
            return;
        }
        String nutrientName = tempTable.getValueAt(tempTable.getSelectedRow(), 0).toString();

        //Check the inserted amount.
        try
        {
            amount = Integer.parseInt(textfield_amount.getText());
            if (amount < 1)
            {
                textfield_amount.setBackground(Color.red);
                return;
            }
        }
        catch (NumberFormatException e)
        {
            textfield_amount.setBackground(Color.red);
            textfield_amount.setText("Ongeldig getal");
            return;
        }

        //Check price input
        try
        {
            price = Double.parseDouble(textfield_purchasePrice.getText().replace(",", "."));
            if (price < 0)
            {
                textfield_purchasePrice.setBackground(Color.red);
                return;
            }
        }
        catch (NumberFormatException e)
        {
            textfield_purchasePrice.setBackground(Color.red);
            textfield_purchasePrice.setText("Ongeldig getal");
            return;
        }

        //Add item line to the order.
        purchaseManager.addOrderLine(orderId, ingredientManager.getIngredient(nutrientName), amount, price);

        if (JOptionPane.showConfirmDialog(rootPane, "Product toegevoegd.\n\nWilt u nog een product toevoegen?", "Nog een product toevoegen?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
        {
            table_drinkIngredients.clearSelection();
            table_foodIngredients.clearSelection();
            textfield_amount.setText("0");
            textfield_purchasePrice.setText("0,00");
        }
        else
        {
            this.dispose();
        }
    }//GEN-LAST:event_button_addItemActionPerformed

    private void textfield_amountKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textfield_amountKeyPressed
    {//GEN-HEADEREND:event_textfield_amountKeyPressed
        textfield_amount.setBackground(Color.WHITE);
        textfield_amount.setForeground(Color.BLACK);
    }//GEN-LAST:event_textfield_amountKeyPressed

    private void textfield_amountMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_textfield_amountMouseClicked
    {//GEN-HEADEREND:event_textfield_amountMouseClicked
        clearText(textfield_amount);
    }//GEN-LAST:event_textfield_amountMouseClicked

    private void textfield_purchasePriceKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_textfield_purchasePriceKeyPressed
    {//GEN-HEADEREND:event_textfield_purchasePriceKeyPressed
        textfield_purchasePrice.setBackground(Color.WHITE);
        textfield_purchasePrice.setForeground(Color.BLACK);
    }//GEN-LAST:event_textfield_purchasePriceKeyPressed

    private void textfield_purchasePriceMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_textfield_purchasePriceMouseClicked
    {//GEN-HEADEREND:event_textfield_purchasePriceMouseClicked
        clearText(textfield_purchasePrice);
    }//GEN-LAST:event_textfield_purchasePriceMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_addItem;
    private javax.swing.JButton button_goBack;
    private javax.swing.JButton button_itemToevoegen;
    private javax.swing.JButton button_terug;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel label_hoeveelheid;
    private javax.swing.JLabel lable_purchasePrice;
    private nl.infosys.hartigehap.supplySystem.presentation.CustomJTable table_drinkIngredients;
    private nl.infosys.hartigehap.supplySystem.presentation.CustomJTable table_foodIngredients;
    private javax.swing.JTextField textfield_amount;
    private javax.swing.JTextField textfield_purchasePrice;
    // End of variables declaration//GEN-END:variables

    private void fillTables()
    {
        ArrayList<Interface_IngredientReadOnly> nutrients = ingredientManager.getIngredients();

        for (Interface_IngredientReadOnly nutrient : nutrients)
        {
            Object[] row = new Object[]
            {
                nutrient.getName(), nutrient.getStock()
            };

            if (nutrient.getId() < 10000)
            {
                foodTableModel.addRow(row);
            }
            else
            {
                drinkTableModel.addRow(row);
            }
        }
        table_foodIngredients.updateRowHeight();
        table_drinkIngredients.updateRowHeight();
    }

    private void clearText(JTextField c)
    {
        c.setText("");
    }
}
