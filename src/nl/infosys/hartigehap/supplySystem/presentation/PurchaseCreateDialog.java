/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.infosys.hartigehap.supplySystem.presentation;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import nl.infosys.hartigehap.supplySystem.businesslogic.IngredientManager;
import nl.infosys.hartigehap.supplySystem.businesslogic.PurchaseManager;
import nl.infosys.hartigehap.supplySystem.domain.Interface_PurchaseOrderReadOnly;
import nl.infosys.hartigehap.supplySystem.domain.Interface_SupplierReadOnly;
import nl.infosys.hartigehap.supplySystem.domain.PurchaseOrderLine;
import nl.infosys.hartigehap.supplySystem.presentation.PurchaseOverviewPanel.PresentationType;

/**
 *
 * @author Gregor
 */
public class PurchaseCreateDialog extends javax.swing.JDialog
{

    private PurchaseManager purchaseManager;
    private IngredientManager ingredientManager;
    private CustomPurchaseCellRenderer tableRenderer;
    private CustomTableDataModel tableModel;
    private DefaultComboBoxModel<String> comboboxModel;
    private PresentationType type;
    private boolean dialogResult;
    private int id;

    /**
     * Creates new form PurchaseAddGUI
     *
     * @param parent
     * @param purchaseManager
     * @param ingredientManager
     * @param type
     */
    public PurchaseCreateDialog(java.awt.Frame parent, PurchaseManager purchaseManager, IngredientManager ingredientManager, PresentationType type)
    {
        super(parent, true);
        this.purchaseManager = purchaseManager;
        this.ingredientManager = ingredientManager;
        this.type = type;

        tableRenderer = new CustomPurchaseCellRenderer();
        tableModel = new CustomTableDataModel(getHeaders(type));
        comboboxModel = new DefaultComboBoxModel<>();

        initComponents();
        fillTable();
        getSuppliers();

        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation((dim.width / 2) - (this.getSize().width / 2), (dim.height / 2) - (this.getSize().height / 2));
    }

    //Public Methods
    /**
     * Return if a user has canceled or saved the order.
     *
     * @return boolean Result of the dialog.
     */
    public boolean getDialogResult()
    {
        return dialogResult;
    }

    //Private Methods
    private void fillTable()
    {
        NumberFormat formatter = new DecimalFormat("â‚¬ ###,##0.00");
        tableModel.setRowCount(0);
        Interface_PurchaseOrderReadOnly order = purchaseManager.getOrder(id);
        for (PurchaseOrderLine line : order.getOrderlines())
        {

            Object[] content = (type == PresentationType.ORDERS)
                    ? new Object[]
                    {
                        line.getIngredient().getName(), line.getAmount(), formatter.format(line.getPrice()), formatter.format(line.getLineTotal())
                    }
                    : new Object[]
                    {
                        line.getIngredient().getName(), line.getAmount()
                    };

            tableModel.addRow(content);
        }
        table_productTable.updateRowHeight();
    }

    private void getSuppliers()
    {

        List<Interface_SupplierReadOnly> suppliers = purchaseManager.getSuppliers();
        comboboxModel.addElement("--Leveranciers--");
        for (Interface_SupplierReadOnly supplier : suppliers)
        {
            comboboxModel.addElement(supplier.getName());
        }

        combobox_suppliers.setModel(comboboxModel);
    }

    private String[] getHeaders(PresentationType type)
    {
        String[] headers;
        if (type == PresentationType.ORDERS)
        {
            this.id = purchaseManager.createNewOrder();
            headers = new String[]
            {
                "Naam", "Aantal", "Prijs per stuk", "Subtotaal"
            };
        }
        else
        {
            this.id = purchaseManager.createNewQuotation();
            headers = new String[]
            {
                "Naam", "Aantal"
            };
        }
        return headers;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jLabel1 = new javax.swing.JLabel();
        button_terug = new javax.swing.JButton();
        button_saveOrder = new javax.swing.JButton();
        button_addItem = new javax.swing.JButton();
        button_removeItem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        label_businessName = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        label_address = new javax.swing.JLabel();
        combobox_suppliers = new javax.swing.JComboBox();
        label_total = new javax.swing.JLabel();
        label_totalAmount = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_productTable = new nl.infosys.hartigehap.supplySystem.presentation.CustomJTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(700, 400));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Producten:");

        button_terug.setText("Terug");
        button_terug.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_terugActionPerformed(evt);
            }
        });

        button_saveOrder.setText("Order plaatsen");
        button_saveOrder.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_saveOrderActionPerformed(evt);
            }
        });

        button_addItem.setText("Item toevoegen");
        button_addItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_addItemActionPerformed(evt);
            }
        });

        button_removeItem.setText("Item verwijderen");
        button_removeItem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                button_removeItemActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Leverancier:");

        jLabel3.setText("Naam:");

        jLabel4.setText("Adres:");

        combobox_suppliers.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                combobox_suppliersItemStateChanged(evt);
            }
        });

        label_total.setText("Totaal:");
        label_total.setVisible(type == PresentationType.ORDERS);

        label_totalAmount.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label_totalAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 5));
        label_totalAmount.setVisible(label_total.isVisible());

        table_productTable.setModel(tableModel);
        table_productTable.setDefaultRenderer(Object.class, tableRenderer);
        table_productTable.setRowSorter(null);
        table_productTable.getColumnModel().getColumn(0).setPreferredWidth(1000);
        table_productTable.getColumnModel().getColumn(1).setPreferredWidth(300);
        if(type==PresentationType.ORDERS)
        {
            table_productTable.getColumnModel().getColumn(2).setPreferredWidth(300);
            table_productTable.getColumnModel().getColumn(3).setPreferredWidth(300);
        }
        jScrollPane3.setViewportView(table_productTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label_total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label_totalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(combobox_suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_businessName, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(label_address, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(button_terug, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(88, 88, 88)
                                .addComponent(button_addItem)
                                .addGap(20, 20, 20)
                                .addComponent(button_removeItem)
                                .addGap(88, 88, 88)
                                .addComponent(button_saveOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combobox_suppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label_businessName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(label_address, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label_total)
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addComponent(label_totalAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_terug)
                    .addComponent(button_saveOrder)
                    .addComponent(button_addItem)
                    .addComponent(button_removeItem))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_terugActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_terugActionPerformed
    {//GEN-HEADEREND:event_button_terugActionPerformed
        this.dispose();
    }//GEN-LAST:event_button_terugActionPerformed

    private void button_addItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_addItemActionPerformed
    {//GEN-HEADEREND:event_button_addItemActionPerformed
        PurchaseAddIngredientDialog dialog = new PurchaseAddIngredientDialog(this, ingredientManager, purchaseManager, id, type);
        dialog.setVisible(true);
        fillTable();
    }//GEN-LAST:event_button_addItemActionPerformed

    private void button_saveOrderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_saveOrderActionPerformed
    {//GEN-HEADEREND:event_button_saveOrderActionPerformed
        if (combobox_suppliers.getSelectedIndex() == 0)
        {
            JOptionPane.showMessageDialog(this, "Geen leverancier geselecteerd, selecteer een leverancier en probeer opnieuw.");
            return;
        }

        if (table_productTable.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(this, "Producten toegevoegd, voeg producten toe en probeer opnieuw.");
            return;
        }

        purchaseManager.setSupplier(id, purchaseManager.getSupplier(combobox_suppliers.getSelectedIndex()).getId());

        purchaseManager.saveOrder(id);

        JOptionPane.showMessageDialog(this, (type == PresentationType.ORDERS ? "Order" : "Offerte") + " opgeslagen.");
        dialogResult = true;

        this.dispose();
    }//GEN-LAST:event_button_saveOrderActionPerformed

    private void button_removeItemActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_button_removeItemActionPerformed
    {//GEN-HEADEREND:event_button_removeItemActionPerformed
        purchaseManager.deleteOrderLine(id, table_productTable.getSelectedRow());
        fillTable();
    }//GEN-LAST:event_button_removeItemActionPerformed

    private void combobox_suppliersItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_combobox_suppliersItemStateChanged
    {//GEN-HEADEREND:event_combobox_suppliersItemStateChanged
        Interface_SupplierReadOnly supplier = purchaseManager.getSupplier(combobox_suppliers.getSelectedIndex());
        label_businessName.setText(supplier.getName());
        label_address.setText(supplier.getAddress());
    }//GEN-LAST:event_combobox_suppliersItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_addItem;
    private javax.swing.JButton button_removeItem;
    private javax.swing.JButton button_saveOrder;
    private javax.swing.JButton button_terug;
    private javax.swing.JComboBox combobox_suppliers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel label_address;
    private javax.swing.JLabel label_businessName;
    private javax.swing.JLabel label_total;
    private javax.swing.JLabel label_totalAmount;
    private nl.infosys.hartigehap.supplySystem.presentation.CustomJTable table_productTable;
    // End of variables declaration//GEN-END:variables
}
